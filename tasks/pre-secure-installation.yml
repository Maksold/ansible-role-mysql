---
- name: Acquire temporary root pass for MySQL 5.7
  shell: >
    awk '$0 ~ "temporary password" {print $11}' {{ mysql_log_error }}
  register: mysql_root_temp_password
  when: ((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout)

- name: Acquire temporary root pass for MySQL 8.0
  shell: >
    awk '$0 ~ "temporary password" {print $13}' {{ mysql_log_error }}
  register: mysql_root_temp_password
  when: ((mysql_install_packages | bool) or mysql_root_password_update) and ('8.0.' in mysql_cli_version.stdout)

- name: Copy .my.cnf file with temporary root password credentials
  template:
    src: "root-temporary-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when:
    - mysql_root_temp_password is defined
    - mysql_root_temp_password.stdout is defined
    - mysql_root_temp_password.stdout|length > 0

- name: Test temporary root password expired
  shell: "mysql -NBe 'SELECT NOW();'"
  register: mysql_temp_password_test_result
  when:
    - mysql_root_temp_password is defined
    - mysql_root_temp_password.stdout is defined
    - mysql_root_temp_password.stdout|length > 0
  ignore_errors: yes

- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -NBe 'ALTER USER "{{ mysql_root_username }}"@"localhost" IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'
    --connect-expired-password
  when:
    - mysql_root_temp_password is defined
    - mysql_root_temp_password.stdout is defined
    - mysql_root_temp_password.stdout|length > 0
    - mysql_temp_password_test_result is defined
    - mysql_temp_password_test_result.stdout is defined
    - ('connect-expired-password' in mysql_temp_password_test_result.stdout)

- name: Overwrite .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when:
    - mysql_root_temp_password is defined
    - mysql_root_temp_password.stdout is defined
    - mysql_root_temp_password.stdout|length > 0

- name: Remove temporary generated password line from log file
  lineinfile:
    path: "{{ mysql_log_error }}"
    regexp: "A temporary password is generated for root@localhost"
    state: absent
  when:
    - mysql_root_temp_password is defined
    - mysql_root_temp_password.stdout is defined
    - mysql_root_temp_password.stdout|length > 0
